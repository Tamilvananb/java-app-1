---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: {{ .Values.javaApp.name }}
      version: {{ .Values.javaApp.version }}
      group: {{ .Values.javaApp.group }}
    name: {{ .Values.javaApp.name }}
  spec:
  {{- if .Values.javaApp.deployment.minReadySeconds }}
    minReadySeconds: {{ .Values.javaApp.deployment.minReadySeconds }}
  {{- end }}
    replicas: {{ .Values.javaApp.deployment.replicaCount }}
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: {{ .Values.javaApp.name }}
        group: {{ .Values.javaApp.group }}
{{- if .Values.javaApp.rollingUpdateStrategy }}
{{ toYaml .Values.javaApp.rollingUpdateStrategy | indent 4 -}}
{{- end }}
    template:
      metadata:
        labels:
          app: {{ .Values.javaApp.name }}
          version: {{ .Values.javaApp.version }}
          group: {{ .Values.javaApp.group }}
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAVA_APP_JAR
            value: "{{ .Values.javaApp.name }}-{{ .Values.javaApp.version }}.{{ .Values.javaApp.type }}"
          {{- if .Values.javaApp.env }}
            {{- range .Values.javaApp.env }}
          - name: {{ .name }}
            value: {{ .value }}
            {{- end }}
          {{- end }}
          image: "{{ .Values.javaApp.image.name }}:{{ .Values.javaApp.image.tag }}"
          imagePullPolicy: {{ .Values.javaApp.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
          {{- if .Values.javaApp.mounts }}
          volumeMounts:
            {{- if .Values.javaApp.mounts.secrets }}
              {{- range .Values.javaApp.mounts.secrets }}
          - mountPath: {{ .mountPath }}
            name: {{ .mountName }}
            {{- if .readOnly }}
            readOnly: {{ .readOnly }}
            {{- end }}
              {{- end }}
            {{- end }}
          {{- if .Values.javaApp.mounts.hostPaths }}
              {{- range .Values.javaApp.mounts.hostPaths }}
          - mountPath: {{ .mountPath }}
            name: {{ .mountName }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- if .Values.javaApp.imagePullSecrets }}
        imagePullSecrets:
          {{- range .Values.javaApp.imagePullSecrets }}
        - name: {{ . }}
          {{- end }}
        {{- end }}
        {{- if .Values.javaApp.serviceAccount }}
        serviceAccount: {{ .Values.javaApp.serviceAccount }}
        {{- end }}
        {{- if .Values.javaApp.mounts }}
        volumes:
          {{- range .Values.javaApp.mounts.secrets }}
        - name: {{ .mountName }}
          secret:
            secretName: {{ .secretName }}
          {{- end }}
          {{- range .Values.javaApp.mounts.hostPaths }}
        - name: {{ .mountName }}
          hostPath:
            path: {{ .hostPath }}
          {{- end }}
        {{- end }}